[SERVICE]
    # Flush
    # =====
    # set an interval of seconds before to flush records to a destination
    flush        5

    # Daemon
    # ======
    # instruct Fluent Bit to run in foreground or background mode.
    daemon       Off

    # Log_Level
    # =========
    # Set the verbosity level of the service, values can be:
    #
    # - error
    # - warning
    # - info
    # - debug
    # - trace
    #
    # by default 'info' is set, that means it includes 'error' and 'warning'.
    log_level    debug

    # Parsers File
    # ============
    # specify an optional 'Parsers' configuration file
    parsers_file parsers.conf

    # Plugins File
    # ============
    # specify an optional 'Plugins' configuration file to load external plugins.
    plugins_file plugins.conf

    # HTTP Server
    # ===========
    # Enable/Disable the built-in HTTP Server for metrics
    http_server  Off
    http_listen  0.0.0.0
    http_port    2020

    # Storage
    # =======
    # Fluent Bit can use memory and filesystem buffering based mechanisms
    #
    # - https://docs.fluentbit.io/manual/administration/buffering-and-storage
    #
    # storage metrics
    # ---------------
    # publish storage pipeline metrics in '/api/v1/storage'. The metrics are
    # exported only if the 'http_server' option is enabled.
    #
    storage.metrics on

    # storage.path
    # ------------
    # absolute file system path to store filesystem data buffers (chunks).
    #
    # storage.path /tmp/storage

    # storage.sync
    # ------------
    # configure the synchronization mode used to store the data into the
    # filesystem. It can take the values normal or full.
    #
    # storage.sync normal

    # storage.checksum
    # ----------------
    # enable the data integrity check when writing and reading data from the
    # filesystem. The storage layer uses the CRC32 algorithm.
    #
    # storage.checksum off

    # storage.backlog.mem_limit
    # -------------------------
    # if storage.path is set, Fluent Bit will look for data chunks that were
    # not delivered and are still in the storage layer, these are called
    # backlog data. This option configure a hint of maximum value of memory
    # to use when processing these records.
    #
    # storage.backlog.mem_limit 5M

# [INPUT]
#     name cpu
#     tag  cpu.local

#     # Read interval (sec) Default: 1
#     interval_sec 1

# [OUTPUT]
#     name  stdout
#     match *


[INPUT]
    Name  syslog
    Mode  udp
    Listen  127.0.0.1
    Port  5140
    Unix_Perm 0777
    Log_Level  debug
    Tag noobaa
    Parser syslog-rfc5424

# [OUTPUT]
#     Name  file
#     Path  /var/log/fluent/fbit-log
#     Match noobaa
#     Format plain

[FILTER]
    Name record_modifier
    Match noobaa
    Allowlist_key message
    # message ${record["message"]}


[OUTPUT]
    Name s3
    Match noobaa
    Bucket noobaa-bucket-log
    Region ap-southeast-2
    Store_dir /tmp/fluent-bit/s3
    Total_file_size 2M
    upload_timeout 1m
    s3_key_format /$TAG/%Y-%m-%d-%H_%M_%S.gz
    json_date_key false
    preserve_data_ordering true